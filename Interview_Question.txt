Git:

1.what is git conflict & how to resolve it.

when we merge two different branches haveing the same name file but total diff content then conflict occure.
actually git get confused which data have to place above & which data have to place lower.

how to resolve it.
just open the file and do some edit and save the file.



2.diff b/w entrypoint & command
Lets create a  dockerfile
FROM ubuntu
CMD echo "hi docker"

docker build -t app .
docker run -it app

hi docker

If we want pass the arrgument at run time then it will replace the cmd comand in dockerfile.
docker run -it app echo "hi aws"

hi aws

So conclusion is CMD command can be replaced with creating the container with passing CMD arrgument.


Question> can we use multiple CMD command in dockerfile:

eg. vi dockerfile

FROM ubuntu
CMD echo "hi aws"
CMD echo "hi python"

docker build -t app .
docker run -it app 

hi python

Now we can see the first CMD command is ignord & last command is run.

-------------------------------------------------------------------------------------------------------------

FROM ubuntu
ENTRYPOINT ["echo","Hi docker"]
docker build - t app .

docker run -it app 

Hi docker

If we pass the arrgument at run time

docker run -it app echo "Hi python"

Hi docker echo Hi python

Here we can see, entrypoint command is not replaced it get appended.

So CMD & ENTRYPOINT both ae used to execute some process at container run time.
cmd command can be replaced but entrypint point command can not. it can be appended.


3.git fetch vs pull.

git fetch bascially fetch the latest updates from remote repo to local repo it donot mearge with working area.
git pull fetch the latest update & merage with the working area.
git pull = fetch + merage

---------------------------------------------------------------------------------------------------------------------

Diff b/w git reset & git revert

git reset: when we add the code in stageing area then we want to push back it in working are then we use git reset

git revert: if we add the commit the code and then we push back in working area then we use git revert, once we revert it, it creates a new commit.

-----------------------------------------------------------------------------------------------------------------------------------------------------------

Instance Launch Type:

On-demand: shot  workload costing in sec
Reserve: reserve b/w 1-3 yr
schdeule-instance: This is similar to reserved instances in that you reserve them between 1 to 3 years. However, with scheduled reserved instances you also must define the time of day, week, or month you want the instance to be available. If you need the instance to only be available between 1:00 PM and 4:00 PM on Tuesdays, then that is the only time the instance will be available to you.
spot-instance: Spot instances are unused EC2 capacity that you bid on when they become available. They are the cheapest of the available launch types. 
dedicated-host: Dedicated hosts allow you to book an entire physical server and control the placement of the instance. You will gain full visibility into the underlying sockets and cores.

-------------------------------------------------------------------------------------------------------------------------------------------------------------------

Diff bw docker exec & docker attach:

both command use to go inside the conatainer.

docker attach command open the currently running shell, thatwhy when we exit conainer get stopped.

docker exec command open the new shell, thatswhy when we exit container still run.

--------------------------------------------------------------------------------------------------------------------------------------------------------------------

Diff bw docker expose & docker publish

docker publish command use to map container port to host port.

-------------------------------------------------------------------------------------------------------------------

Terraform importent command:

terraform import: 
terraform refresh: after creating the infra, then bymistake some resource got deleted so after running this command 
                   desired state will be become equal to curret state.
terraform destroy --target=aws_instance.instance_name: if we want to create/destroy any perticular resource then then we 
                                                       we use target option.

------------------------------------------------------------------------------------------------------------------------------------
JAVA Home Path:

find /usr/ -name *openjdk

JAVA_HOME=/usr/lib/jvm/java-1.8.0
export JAVA_HOME=/usr/lib/jvm/java-1.8.0
export PATH=$JAVA_HOME/bin:$PATH
source /etc/profile
echo $JAVA_HOME

-------------------------------------------------------------------------------------------------------------------------------

Git Branches:

git branch -- to list all the branches
git branch name-- to create new branch

git checkout branchname--to switch the branch

git branch -d branchname--to delete branch

-------------------------------------------------------------------------------------------------------------------

Git Stash:

let suppose we are working on some file & due to some urgent work we have to work on another file.
then then we have to stop working on first file. then if we want to keep this file safe so we use git stash command.

git stash

git stash list

git stash apply stashno

git stash clear

-----------------------------------------------------------------------------------------------------------------------------

git log-->all commit details

git shaow commitid --> detailed info 

if we want to remove git configuration then we have to remove .git filr

rm -rf .git

git remove -v -->to check the remote repo

git pull -a --> it pull all the changes form remote repo

git log-->to check all the commit

git reset--> it is used to bring back the file from staging area to working area

git reset commitid-->if want to remove latest commit 

-----------------------------------------------------------------------------------------------------------------------------------------

#What is the best way to write docker file.
use multistage build in dockerfile


diff b/w agr env in docker file.

ARG: used to define the variable, is only available at the time of image building. we can also overwrite the arg value at  the run time
ENV: is for future running container

-------------------------------------------------------------------------------------------------------------------------------------------

docker save & docker load command: used to create the archive the of the image

docker save -o backup.tar imagename-->archive the image
docker load -i backup.tar-->create image from archive


Docker export & docker import command:
-----------------------------------------------------------------------------------------------------------------

#diff b/w ebs & efs
-----------------------------------------------------------------------
#diff b/w arg & env
arg-->used in run time
env-->used for future container
----------------------------------------------------------------------

#how to write efficient docker file:
use multistage build container
-----------------------------------------------------------------------

diff b/w security group & NACL:
security group-->statefull
NACL-->stateless

------------------------------------------------------------------------

RDS:

Fully managed
Multi AZ
Read replicas
Backup & restore to specific timestamp
scalling automatically u have to set max storage threshold

RDS backups:
automatically enabled
ability to restore any point in time
7 days retension (incrase to 35 days)


DB Snapshort:
mannually triggered by user
retention as u want

RDS read replicas:
we can only read 
we can create 5 replicas
replicas is async so read eventually consistent

RDS multi AZ:
sync replicas
one DNS name

----------------------------------------------------------------------------------------------------------

Diff bw kubectl create & kubectl apply:

apply: used to create or modify resourse in manifest file.
create: used to create resourse directly at command line.


-----------------------------------------------------------------------------------------------------------

diff b/w cloudwatch & cloudTrail:

cloudwatch: it is focus on the health and performance of aws resourse
it helps collecting & tracking metics log files & setting alarm
deliver event within 5 min or 1 min.

Cloudtrail:
service focused on action performed inside aws enviorment
mainly focused on the user activities inside the account
delivers an event within 15 min of the api call
it store bydefault 90 days
-------------------------------------------------------------------------------------------------------
what is health probs in kubernetes?
what is the difference b/w liveness & readyness probe.

How to configure these probes:
these probes can be configures in three ways
1.httpget
2.exec
3.tcpport

--------------------------------------------------------------------------------------------------------

how to overcome resource utilization in kubernetes.

resources:
 requests:
   cpu: "250m"
   memory: "215Mi" 
 limits:
   cpu: "500m"
   memory: "500Mi"

-------------------------------------------------------------------------------------------------

Ansible Roles:

ansible-galaxy init <ROLE_NAME>

roles-example/
+-- defaults
¦   +-- main.yml
+-- files
+-- handlers
¦   +-- main.yml
+-- meta
¦   +-- main.yml
+-- README.md
+-- tasks
¦   +-- main.yml
+-- templates
+-- tests
¦   +-- inventory
¦   +-- test.yml
+-- vars
    +-- main.yml


Defaults:
The defaults directory is for defining the variable defaults. 
The variables in default have the lowest priority thus becoming easy to override. 
If definition of a variable is nowhere else, the variable in defaults/main.yml will 
be used.


ansible-galaxy init /etc/ansible/apache --offline
-------------------------------------------------------------------------------------------------------------------------

Ansible ninja2 templete:

ninja2 template is a text file, which content can be replaced with ansible fact and ansible variable.
the format is .j2 file

note: make sure to use ninja2 template in ansible playbook always use template module.

---
 - hosts: all
   tasks:  
     - name: copy config
       template: 
          src: path of jinja2 template
          dest: info

-------------------------------------------------------------------------------------------------------------------------------------------------------

system logs:

tail -f /var/logs/secure--->to list last few lines in continouation 

crontab -e

*/3 * * * *-->after evry 3 min

route -n -->to find gatway

systemctl mask
system unmast

--------------------------------------------------------------------------------------------------------------------------------------------------

what is the diff if we remove the docker images from name & from image ID.

docker system df

docker top dontainerid

ps -ef-->to find PPID

yum install net-tools -->to run networking commnad

note: contaner in bridge network and communcate with host machine & internet.

note: container b/w the diff bridge nw can not communicate with each other.

----------------------------------------------------------------------------------------------------------------------------

diff blw dedicated host & dedicated instance:

dedicated Instance: only one instance can be host on dedicaed hardware & hypervisor

dedicated host: same as above but we can host multiple instance

---------------------------------------------------------------------------------------------------------------------------------------

EBS Optimization:

increase the bandwith b/w vm & ebs volume as per needed.

---------------------------------------------------------------------------------------------------------------------------------------

After attaching the ebs volume in window or linux vm how to enable it:

In Linux:
df -h-->to list the partition
fdisk -l-->list all the hdd
fdisk diskname-->to create the partition
mkfs.xfs-->to formate the partition
mount partiton dirpath-->to mount the disk

--------------------------------------------------------------------------------------------------------------------------------------

Diff b/w hibernet & sleep mode:

--------------------------------------------------------------------------------------------------------------------------------------

Ho to disable pod schdule on node in kubernetes:

#using the corden command we can disable the pod schduling on pod

----------------------------------------------------------------------------------------------------------------------------------------

How to create kubernetes cluster:

Kubernetes installation with KOPs:

steps:
1.to store all the session for kubernetes, we need to create s3 bucket & export into variable
export KOPS_STATE_STORE=s3://bucketname
2.create an IAM role with with iam,ec2,s3 & route 53 full access
3.create ec2instance with ability to create/delete/manage ec2|s3|route53|iam 
4.install kubectl
5.install kops
6.create route53 private hosted zone.
7.expose env variable
export KOPS_STATE_STORE=s3://bucketname
8.create ssh-keygen
9.kops create cluster --cloud=aws --zones=us-east-2b,us-east-2b --name=kishan.dnszone.com --dns-zone=dns.com --dns private --yes

--------------------------------------------------------------------------------------------------------------------------------------------

Kubernetes installation by kubeadm:

1.create ec2
2.create dns entry in hostfile /etc/hosts
3.off swap memeory
swapoff -a
#also remove fstab enrty
4.stop firewall 
5.add reposatory for docker & kubernetes

To install docker:

 sudo yum install -y yum-utils
 sudo yum-config-manager \
    --add-repo \
    https://download.docker.com/linux/centos/docker-ce.repo

After add this repo we can find in repo in /etc/yum.repos.d

Now add kubernets reposatory:

cat <<EOF | sudo tee /etc/yum.repos.d/kubernetes.repo
[kubernetes]
name=Kubernetes
baseurl=https://packages.cloud.google.com/yum/repos/kubernetes-el7-\$basearch
enabled=1
gpgcheck=1
repo_gpgcheck=1
gpgkey=https://packages.cloud.google.com/yum/doc/yum-key.gpg https://packages.cloud.google.com/yum/doc/rpm-package-key.gpg
exclude=kubelet kubeadm kubectl
EOF

6.sudo setenforce 0
sudo sed -i 's/^SELINUX=enforcing$/SELINUX=permissive/' /etc/selinux/config


7.yum uninstall -y docker-ce kubelet-1.21* kubeadm-1.21* --disableexcludes=kubernetes

8.systemctl start docker kubelet
9.systemctl enable docker kubelet

10.kubeadm init
#now copy admin.conf file in user home directory

11.yum install kubectl -y


--------------------------------------------------------------------------------------------------------------------------------------------------------------------------


